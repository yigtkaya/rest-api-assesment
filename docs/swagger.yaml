swagger: "2.0"
info: 
  title: REST API Assesment
  version: 1.0.0

basePath: /v1
schemes: [http, https]

paths:
  /createGroup:
    post:
      consumes:
      - application/json
      operationId: CreateGroup
      parameters:
      - in: body
        name: Group
        required: true
        schema:
          $ref: '#/definitions/Group'
      produces:
      - application/json
      responses:
        "200":
          description: "OK"
      schemes:
      - http
      - https
      - ws
      - wss
      summary: Create a group in mongodb.
      tags:
      - Group
  /createUser:
    post:
      consumes:
      - application/json
      operationId: CreateUser
      parameters:
      - in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/User'
      produces:
      - application/json
      responses:
        "200":
          description: "OK"
      schemes:
      - http
      - https
      - ws
      - wss
      summary: Create a user in mongodb.
      tags:
      - User
  /deleteGroup/{group_name}:
    delete:
      consumes:
      - application/json
      operationId: DeleteGroup
      parameters:
      - in: path
        name: group_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: "OK"
      schemes:
      - http
      - https
      - ws
      - wss
      summary: Delete a group by id.
      tags:
      - Group
  /deleteUser/{name}:
    delete:
      consumes:
      - application/json
      operationId: DeleteUser
      parameters:
      - in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: "OK"
      schemes:
      - http
      - https
      - ws
      - wss
      summary: Delete a user by id.
      tags:
      - User
  /getAllGroups:
    get:
      consumes:
      - application/json
      operationId: getAllG
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: get list of groups.
      tags:
      - Group
  /getAllUsers:
    get:
      consumes:
      - application/json
      operationId: GetAll
      produces:
      - application/json
      responses:
        "200":
          description: "OK"
      summary: get list of users.
      tags:
      - User
  /getGroup/{group_name}:
    get:
      consumes:
      - application/json
      operationId: GetGroup
      parameters:
      - in: path
        name: group_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: "OK"
      schemes:
      - http
      - https
      - ws
      - wss
      summary: get a group by id.
      tags:
      - Group
  /getUser/{name}:
    get:
      consumes:
      - application/json
      operationId: GetUser
      parameters:
      - in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: "OK"
      schemes:
      - http
      - https
      - ws
      - wss
      summary: Get an user by id.
      tags:
      - User
  /updateGroup:
    patch:
      consumes:
      - application/json
      operationId: UpdateGroup
      parameters:
      - in: body
        name: Group
        required: true
        schema:
          $ref: '#/definitions/Group'
      produces:
      - application/json
      responses:
        "200":
          description: "OK"
      schemes:
      - http
      - https
      - ws
      - wss
      summary: Update group with body.
      tags:
      - Group
  /updateUser/:
    patch:
      consumes:
      - application/json
      operationId: UpdateUser
      parameters:
      - in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/User'
      produces:
      - application/json
      responses:
        "200":
          description: "OK"
      schemes:
      - http
      - https
      - ws
      - wss
      summary: Update the user.
      tags:
      - User
      
definitions:
  Group:
    properties:
      group_name:
        description: the name for this group
        maximum: 1
        type: string
        x-go-name: Name
    required:
    - group_name
    type: object
    x-go-package: example/deneme/models
  User:
    properties:
      email:
        description: the email for this User
        type: string
        x-go-name: Email
      membership:
        $ref: '#/definitions/Group'
      name:
        description: the name for this User
        type: string
        x-go-name: Name
      password:
        description: the password for this User
        type: string
        x-go-name: Password
    required:
    - email
    - password
    - name
    - membership
    type: object
    x-go-package: example/deneme/models
